<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: product | Hatak::Techlog]]></title>
  <link href="http://blog.hatak.net/blog/categories/product/atom.xml" rel="self"/>
  <link href="http://blog.hatak.net/"/>
  <updated>2014-02-15T18:31:50+09:00</updated>
  <id>http://blog.hatak.net/</id>
  <author>
    <name><![CDATA[hatak]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Perl 製の Twitter bot を書き直した]]></title>
    <link href="http://blog.hatak.net/blog/2014/02/15/twitter-bot/"/>
    <updated>2014-02-15T18:25:42+09:00</updated>
    <id>http://blog.hatak.net/blog/2014/02/15/twitter-bot</id>
    <content type="html"><![CDATA[<p>3年以上前に作成したまま放置していた Twitter bot を作り直して再リリースしました。<br>
&quot;<a href="https://twitter.com/nichibotwit">にちぼついったー</a>&quot; という，東京の日の出・日の入りの時刻につぶやくだけのシンプルな bot です。</p>

<p><a href="https://twitter.com/nichibotwit/status/434438925411553280">https://twitter.com/nichibotwit/status/434438925411553280</a>">https://twitter.com/nichibotwit/status/434438925411553280">https://twitter.com/nichibotwit/status/434438925411553280</a></a></p>

<p>久しぶりにまともなコードを書いたので，ちょっと作業内容などを記録しておこうかなと思いました。</p>

<!--more-->

<h2 id="toc_482">旧にちぼくんの仕組み</h2>

<p>旧バージョンは 2009 年の秋頃に作成・リリースしていました。ちょうど Moose を使いたくて仕方ない頃だったらしく <a href="https://metacpan.org/pod/MooseX::App::Cmd">MooseX::App::Cmd</a> という Moose ベースでコマンドラインツールを書くためのフレームワークを使って書いていました。</p>

<ul>
<li>set

<ul>
<li>実行時間を調べて Cron を書き換える

<ul>
<li>日の出時刻は &quot;sunrise&quot; モード</li>
<li>日の入り時刻は &quot;sunset&quot; モード</li>
</ul></li>
<li>日の出・日の入り時間はメタデータとしてローカルの DB に格納

<ul>
<li><a href="http://eco.mtk.nao.ac.jp/koyomi/dni/">国立天文台のこよみ</a> を気が向いたときに scrape して DB に突っ込む</li>
</ul></li>
</ul></li>
<li>tweet

<ul>
<li>モードによってメッセージリストの中からランダムでツイート</li>
</ul></li>
</ul>

<p>&quot;set&quot; コマンドを AM 1:00 に実行し，その日の日の出・日の入りの時間を調べて Cron 書き換え，そしてその時間に &quot;tweet&quot; コマンドが起動してつぶやくというイケてない実装でした。もともとは <code>at</code> で実行時間をセットするように書いていたものの，実際にデプロイした VPS で <code>at</code> を使えないというトラブルのためリリース前に cron を使う方式に書き直した経緯があります。<br>
この旧 bot には致命的な欠点が 2 つありました。</p>

<ul>
<li>メタデータ更新が必要

<ul>
<li>公開されているこよみは翌年分までしかないため，適宜 DB を更新しなければならない</li>
</ul></li>
<li>Cron 書き換えがイケてないというか危ない

<ul>
<li>古い行を消して新しい行を追加，という処理が微妙</li>
<li>しかし，毎日つぶやく時間が異なるため困る</li>
</ul></li>
</ul>

<p>結果的にメタデータの更新を忘れてしまったことや，別サーバに移したときに cron 書き換えをしたくないために止めてしまっていました。</p>

<h2 id="toc_483">新にちぼくんの仕組み</h2>

<p>そこで，欠点それぞれに対しての解決策を考えてにちぼくんを再実装しました。</p>

<p><a href="https://github.com/hatak/twitter-bot">hatak/twitter-bot</a></p>

<ul>
<li>日の出日の入り時刻問題

<ul>
<li><a href="https://metacpan.org/pod/Astro::Sunrise">Astro::Sunrise</a> 使って計算</li>
</ul></li>
<li>つぶやく時間問題

<ul>
<li><a href="https://metacpan.org/pod/AnyEvent">AnyEvent</a> でループ</li>
</ul></li>
</ul>

<p>Astro::Sunrise は緯度・経度を基にその場所の日の出・日の入り時刻を計算してくれるモジュールです。<br>
使い方もとてもシンプル。</p>
<div class="highlight"><pre><code class="perl"><span class="k">use</span> <span class="nn">Astro::</span><span class="n">Sunrise</span><span class="p">;</span>

<span class="c1"># YYYY,MM,DD,longitude,latitude,Time Zone,DST,ALT</span>
<span class="c1"># ここでは東京とする</span>
<span class="c1"># -0.583 は太陽の中心が地平線に接したときの角度を示す</span>
<span class="p">(</span><span class="nv">$sunrise</span><span class="p">,</span> <span class="nv">$sunset</span><span class="p">)</span> <span class="o">=</span> <span class="n">sunrise</span><span class="p">(</span><span class="mi">2014</span><span class="p">,</span> <span class="mo">02</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mf">139.7414</span><span class="p">,</span> <span class="mf">35.6581</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.583</span><span class="p">)</span>
</code></pre>
</div>

<p>結果はそれぞれ &quot;hh:mm&quot; という文字列で返ってくるので，split して時と分に分けるなり，再度オブジェクトにするなり自由に加工できます。<br>
毎回計算することでメタデータを利用する必要がなくなりました。弊害としては，計算方式の違いで国立天文台のこよみと少し違う時間となるケースが起きてしまいました。しかし，ずれていても 1 分程度なので，今回のサービス的には許容できる誤差と考えています。</p>

<p>AnyEvent は定番過ぎるので，紹介については割愛します。一日 2 回しかつぶやかないのでループにしておくのは勿体ないようにも思えましたが，毎回つぶやくタイミングが違うことに対する解決策が思い浮かばなかったためこうなりました。。</p>

<h2 id="toc_484">今後の改良とか</h2>

<p>せっかく Astro::Sunrise で動的に計算できるようにしたので，今後は mention を受けて東京以外の場所や別の日の計算もしてくれるようにしたいですね！<br>
それ以前にコード内に consumer_key や access_token を直接書いてしまっているので，このあたりの設定切り出しはしておきたいです。</p>
]]></content>
  </entry>
  
</feed>
